apiVersion: v1
kind: Service
metadata:
  name: etcd-cluster
  namespace: default
spec:
  ports:
  - port: 12379
    name: client
  - port: 12380
    name: peer
  clusterIP: None
  selector:
    etcd: etcd-cluster

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    etcd: etcd-cluster
  name: etcd-node
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      etcd: etcd-cluster
  serviceName: etcd-cluster
  template:
    metadata:
      creationTimestamp: null
      labels:
        etcd: etcd-cluster
      name: etcd-node
    spec:
      affinity:
       nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: third-party/app
               operator: In
               values:
               - 'etcd'
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      - command:
        - "/bin/sh"
        - "-ecx"
        - |
          IP=$(hostname -i)
          for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
            while true; do
              echo "Waiting for etcd-node-${i}.etcd-cluster to come up"
              ping -W 1 -c 1 etcd-node-${i}.etcd-cluster > /dev/null && break
              sleep 1s
            done
          done
          PEERS=""
          for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
              PEERS="${PEERS}${PEERS:+,}etcd-node-${i}=http://etcd-node-${i}.etcd-cluster:12380"
          done
          exec /usr/bin/etcd --name ${HOSTNAME} \
            --listen-peer-urls http://${IP}:12380 \
            --listen-client-urls http://${IP}:12379,http://127.0.0.1:12379 \
            --advertise-client-urls http://${HOSTNAME}.etcd-cluster:12379 \
            --initial-advertise-peer-urls http://${HOSTNAME}.etcd-cluster:12380 \
            --initial-cluster-token etcd-cluster \
            --initial-cluster ${PEERS} \
            --initial-cluster-state new
            #--initial-cluster-state existing
        env:
        - name: CLUSTER_SIZE
          value: "3"
        image: registry.cn-beijing.aliyuncs.com/icsoc/etcd:v2
        imagePullPolicy: IfNotPresent
        name: etcd-node
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: etcddata
          mountPath: /etcddata
      volumes:
      - hostPath:
          path: /data/k8s/etcd
          type: DirectoryOrCreate
        name: etcddata
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: chat-prod
      restartPolicy: Always
