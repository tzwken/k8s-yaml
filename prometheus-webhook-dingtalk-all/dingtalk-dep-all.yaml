kind: Deployment
apiVersion: apps/v1
metadata:
  name: webhook-dingtalk
  namespace: monitoring
  labels:
    app: webhook-dingtalk
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webhook-dingtalk
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: webhook-dingtalk
    spec:
      volumes:
        - name: webhook-dingtalk-config
          secret:
            secretName: prometheus-webhook-dingtalk
            items:
              - key: config.yml
                path: config.yml
              - key: default.tmpl
                path: default.tmpl
            defaultMode: 420
      containers:
        - name: webhook-dingtalk
          image: 'docker.io/timonwong/prometheus-webhook-dingtalk:v1.4.0'
          args:
            - '--config.file=/prometheus-webhook-dingtalk/config.yml'
            - '--web.enable-ui'
            - '--web.listen-address=:8060'
          ports:
            - name: web
              containerPort: 8060
              protocol: TCP
          env:
            - name: https_proxy
              value: 'socks5://proxy:abcabc@81.68.120.64:8080'
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 60Mi
          volumeMounts:
            - name: webhook-dingtalk-config
              mountPath: /prometheus-webhook-dingtalk/config.yml
              subPath: config.yml
            - name: webhook-dingtalk-config
              mountPath: /prometheus-webhook-dingtalk/templates/default.tmpl
              subPath: default.tmpl
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - master
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: webhook-dingtalk
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
      tolerations:
        - operator: Exists
          effect: NoSchedule
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

---
kind: Service
apiVersion: v1
metadata:
  name: webhook-dingtalk
  namespace: monitoring
spec:
  ports:
    - protocol: TCP
      port: 8060
      targetPort: 8060
  selector:
    app: webhook-dingtalk
  type: ClusterIP
  sessionAffinity: None

---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: dingtalk-ing
  namespace: monitoring
spec:
  rules:
    - host: ncc-dingtalk.sany.com.cn
      http:
        paths:
          - path: /
            backend:
              serviceName: webhook-dingtalk
              servicePort: 8060
