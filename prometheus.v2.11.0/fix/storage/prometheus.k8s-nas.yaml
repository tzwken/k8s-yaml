apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
  name: k8s
  namespace: monitoring
spec:
  additionalScrapeConfigs:
    key: prometheus-additional.yaml
    name: additional-scrape-configs
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/app
            operator: In
            values:
            - prometheus
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  baseImage: quay.io/prometheus/prometheus
  containers:
  - name: prometheus
    volumeMounts:
    - mountPath: /prometheus
      name: db
      subPath: ./
  externalLabels:
    prometheus: saas-prod
  externalUrl: https://saas-prome.icsoc.net
  nodeSelector:
    kubernetes.io/os: linux
  podMonitorSelector: {}
  replicas: 2
  resources:
    requests:
      memory: 400Mi
  retention: 30d
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      metadata:
        name: db
      spec:
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: 500Gi
        storageClassName: prometheus-data-db
  tolerations:
  - effect: NoSchedule
    operator: Exists
  version: v2.11.0
